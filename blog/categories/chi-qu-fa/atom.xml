<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 尺取法 | 地平线上的一匹狼]]></title>
  <link href="http://834930269.github.io/blog/categories/chi-qu-fa/atom.xml" rel="self"/>
  <link href="http://834930269.github.io/"/>
  <updated>2016-11-09T22:13:04+08:00</updated>
  <id>http://834930269.github.io/</id>
  <author>
    <name><![CDATA[CasaLan]]></name>
    <email><![CDATA[m13569859563@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[POJ题目翻译-3061-Subsequence]]></title>
    <link href="http://834930269.github.io/blog/2016/11/09/fanyi3/"/>
    <updated>2016-11-09T22:02:14+08:00</updated>
    <id>http://834930269.github.io/blog/2016/11/09/fanyi3</id>
    <content type="html"><![CDATA[<h1><center>Subsequence</h1>


<blockquote><p>A sequence of N positive integers (10 &lt; N &lt; 100 000), each of them less than or equal 10000, and a positive integer S (S &lt; 100 000 000) are given. Write a program to find the minimal length of the subsequence of consecutive elements of the sequence, the sum of which is greater than or equal to S.</p></blockquote>

<p>翻译:</p>

<blockquote><p>一个由N个正整数(10&lt;N&lt;100000)构成的序列,他们中每个都低于或等于10000,给你一个正整数S(S&lt;100000000),写出一个程序来找到拥有最少元素的连续子序列,并且和要大于等于S.</p></blockquote>

<!--more-->


<p>Sample Input</p>

<p>2
10 15
5 1 3 5 10 7 4 9 2 8
5 11
1 2 3 4 5</p>

<p>Sample Output</p>

<p>2
3</p>

<p>Code(尺取法):<br>
```c</p>

<h1>include<cstdio></h1>

<h1>include<algorithm></h1>

<p>using namespace std;
int n,m,S;
int N[100000];</p>

<p>void solve(){//尺取法解决,白皮书P148页
    int res=m+1;//计数器
    int s=0,t=0,sum=0;
    for(;;){
        while(t&lt;m&amp;&amp;sum&lt;S){
            sum+=N[t++];
        }
        if(sum&lt;S)break;
        res=min(res,t-s);
        sum-=N[s++];
    }
    if(res>m)res=0;
    printf(&ldquo;%d\n&rdquo;,res);
}</p>

<p>int main(){
        scanf(&ldquo;%d&rdquo;,&amp;n);
        for(int i=0;i&lt;n;i++){
            scanf(&ldquo;%d%d&rdquo;,&amp;m,&amp;S);
            for(int j=0;j&lt;m;j++){
                scanf(&ldquo;%d&rdquo;,&amp;N[j]);
            }
            solve();
        }
    return 0;
}</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
